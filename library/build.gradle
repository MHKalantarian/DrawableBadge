apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'kotlin-android'

group = 'com.github.minibugdev'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode 4
        versionName "1.0.3"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile "com.android.support:appcompat-v7:$support_library_version"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    androidTestCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    androidTestCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestCompile "com.nhaarman:mockito-kotlin-kt1.1:$mockito_version"
    androidTestCompile "org.mockito:mockito-android:2.11.0"
    androidTestCompile "com.android.support:support-annotations:$support_library_version"
    androidTestCompile "com.android.support.test:runner:$test_runner_version"
}

// build a jar with source files
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

// build a jar with javadoc
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}
